#include<iostream>
#include<string>
#include<sstream>
#include<windows.h>
using namespace std;
int search(int);
int display();
int ch;
string check(int);  //   for checking quantity
////////////////////////////////////////////////////////////////////
struct node
{
	int ID;
	string proName;
	double prePrice;
	int quantity;
	string cname;
	int data;
	struct    node* next;
	struct   node* link;
	struct   node* links;
};
// global 
struct node* front = NULL;
struct node* rear = NULL;
struct node* head = NULL;
////////////////////////////////////////////////////////////////////
void insertp()
{
	system("cls");
	int id, quant;           //  quant    for quantity
	string name;
	double pre;            //  pre for price
	struct node* t = new node;
	struct node* p = head;
	cout << "\t\t\tEnter product ID:-";
	cin >> id;
	t->ID = id;
	cout << "\t\t\tEnter product Name:-";
	cin >> name;
	t->proName = name;
	cout << "\t\t\tEnter product price:-";
	cin >> pre;
	t->prePrice = pre;
	cout << "\t\t\tEnter product quantity:-";
	cin >> quant;
	t->quantity = quant;
	if (head == NULL)
	{
		t->next = head;
		head = t;
	}
	else
	{
		while (p->next != NULL)
		{
			p = p->next;
		}
		p->next = t;
		t->next = NULL;
	}
	system("cls");
	cout << "\n\n\t\t\t\tThis product is Inserted!\n\n\n";
}

///////////////////////////////////////////////////////////////////////////////////////////
int search(int id)                     //    for search item in list
{
	int count = 1;
	struct node* p = head;
	while (p != NULL)
	{
		if (p->ID == id)
			break;
		else
			count++;
		p = p->next;
	}
	return count;
}
///////////////////////////////////////////////////////////////////////
void delPro()
{
	system("cls");
	display();
	int id;
	struct node* cur = head;
	struct node* pre = head;
	cout << "\n\nEnter ID to delete that product:\n\n";
	cin >> id;
	if (head == NULL)
	{
		system("cls");
		cout << "List is empty" << endl;
	}
	int pos = 0;
	int count = display();               //   for load no of nodes
	pos = search(id);                        //   for check weather desire node is exist or not
	if (pos <= count) {
		while (cur->ID != id) {                //  for delete middle area products
			pre = cur;
			cur = cur->next;           //cur points to (n-1)th node
		}
		pre->next = cur->next;        // (n+1)th node
		system("cls");
		cout << "\n<<item is deleted>>\n";
	}
	else {
		cout << "\n<<<Not found>>\n\n";
	}
}
//////////////////////////////////////////////////////////////////////////////////
void modify()
{
	int id;
	double pre;        //    pre for price
	string pName;
	int nid; int nq;     //   pName for new name
	if (head == NULL)
	{
		system("cls");
		cout << "List is empty" << endl;
	}
	else
	{
		display();
		cout << "\n\nEnter ID to modify product Name and its price:\n";
		cin >> id;
		struct node* cur = head;
		int pos = 0;
		int count = display();               //   for load no of nodes
		pos = search(id);
		//   for check weather desire node is exist or not
		if (pos <= count)
		{
			while (cur->ID != id)
			{
				cur = cur->next;
			}
			cout << "\nOld ID : " << cur->ID << endl;
			cout << "\nOld Name : " << cur->proName << endl;
			cout << "\nOld Price : " << cur->prePrice << endl;
			cout << "\nOld Quantity : " << cur->quantity << endl;
			cout << endl << endl;
			cout << "Enter new ID:";
			cin >> nid;
			cur->ID = nid;
			cout << "Enter new Name:";
			cin >> pName;
			cur->proName = pName;
			cout << "Enter new Price:";
			cin >> pre;
			cur->prePrice = pre;
			cout << "Enter new Quantity:";
			cin >> nq;
			cur->quantity = nq;
		}
		else
		{
			cout << id << " is <<<Not found>>\n\n";
		}
	}
}
////////////////////////////////////////////////////////////////////////
int display()
{
	system("cls");
	int c = 0;             //   c for count products
	struct node* p = head;
	cout << "Existing products are:\n";
	cout << "ID\t\tProduct Name\t\t\Price\t\tQuantity\n";
	cout << "=================================================================|\n";
	while (p != NULL)
	{
		cout << p->ID << "\t\t" << p->proName << "\t\t\t" << p->prePrice << "\t\t\t" << check(p->quantity) << "\n"; //    call   check func and pass quantity
		p = p->next;
		c = c + 1;
	}
	cout << "\nTotal products in our store is : " << c << "\n\n\n";
	return c;
}
////////////////////////////////////////////////////////////////////////////////////////
string check(int quant)
{              //        check function
	int a = quant;
	stringstream ss;
	ss << a;
	string quantity = ss.str();
	if (quant <= 0)
		return "out of stock!";
	else
		return quantity;
}
//Function to check if queue is empty or not
bool isempty()
{
	if (front == NULL && rear == NULL)
		return true;
	else
		return false;
}
//function to enter elements in queue
void enqueue(string name)
{
	node* ptr = new node();
	ptr->cname = name;
	ptr->link = NULL;
	//If inserting the first element/node
	if (front == NULL)
	{
		front = ptr;
		rear = ptr;
	}
	else
	{
		rear->links = ptr;
		rear = ptr;
	}
}
//function to delete/remove element from queue
void dequeue()
{
	if (isempty())
		cout << "Queue is empty\n";
	else
		//only one element/node in queue.
		if (front == rear)
		{
			free(front);
			front = rear = NULL;
		}
		else
		{
			node* ptr = front;
			front = front->link;
			free(ptr);
		}
}
//function to show the element at front
void showfront()
{
	if (isempty())
		cout << "Queue is empty\n";
	else
		cout << "element at front is:" << front->cname << "\n";
}
//function to display queue
void displayQueue()
{
	if (isempty())
		cout << "Queue is empty\n";
	else
	{
		node* ptr = front;
		while (ptr != NULL)
		{
			cout << "\t" << ptr->cname << "\t  " << endl;
			ptr = ptr->links;
		}
	}
}
void bpop()
{
	cout << "Your Trolli No is : 50" << endl;
	cout << "                  ___" << endl;
	cout << "                 /  |" << endl;
	cout << "  ______________/   --" << endl;
	cout << " |___/__ /___/_|     " << endl;
	cout << " |__/___/___/__|     " << endl;
	cout << " |_/___/___/___|     " << endl;
	cout << "    _______/         " << endl;
	cout << "     O   O           " << endl;

}

///////////////////////////////////////////////////////////////////////
void buy()
{
	system("cls");
	display();
	string products[20];
	//   for display sold items
	int pay = 0, no, c = 0, price, id, i = 1;
	if (head == NULL)
	{
		cout << "\n<<<<There is no items to buy>>>>\n\n";
	}
	else
	{
		cout << "How many items you wanna to buy!\n";
		cin >> no;
		int count = display();           //   for store no of nodes  in c
		while (i <= no)
		{
			struct node* cur = head;
			int quant, cho; a:           //   quant   for quantity  and cho for choice
			cout << "Enter id of item that you want to buy: ";
			int id, pos = 0;
			cin >> id;
			if (id == -1) { system("cls"); return; }
			pos = search(id);
			if (pos <= count)
			{
				//     item is available in store
				while (cur->ID != id)
				{
					cur = cur->next;
				}
				cout << "How many quantities you want:";
				cin >> quant;
				if (cur->quantity < quant)
				{
					cout << "\n\n\t\t\t----The Quantity You Entered is not available---" << endl;
					cout << "\n\t\t\t-----(Press -1 for Back to Main Menu)------" << endl;
					goto a;
				}
				products[c] = cur->proName;   // this will conatin the items buy names in array; 
				c++;
				pay = pay + (cur->prePrice * quant);         //     calculate Bill
				cur->quantity = cur->quantity - quant;           //    change quantity
				i++;
			}
			else
			{
				cout << "\n<<<<<<<<<This item is not available in our store at this time>>>>\n\n";
			}
		}
		string customer;
		cout << "\n\t\t Enter Your Name :"; cin >> customer;
		enqueue(customer);
		system("cls");
		cout << "\n\n\n\n\t\t\tYou have bought : ";
		for (int i = 0; i < no; i++)
		{          //    show that item you have bought
			cout << products[i] << ",";
		}
		price = pay * (0.90);           //    with 5% discount
		cout << "\n\nOriginal price : " << pay;
		cout << "\n with 10% discount: " << price << "\nThank you! for the shopping\n\n";
	}
}
/////////////////////////////////////////////////////////////////////////////////////////
void administator()
{
	system("cls");
	system("cls");
	int ch, ids, paswrd; c:
	cout << "\t\t\t\t--------------------------------------------------" << endl;
	cout << "\t\t\t\t|             ENTER ADMINISTER ID                 | " << endl;
	cout << "\t\t\t\t--------------------------------------------------" << endl;
	cout << endl;
	cout << "\t\t\t\t\t\t\t";
	cin >> ids;
	cout << "\t\t\t\t--------------------------------------------------" << endl;
	cout << "\t\t\t\t|      ENTER PASWORD TO OPEN FUNCTION              | " << endl;
	cout << "\t\t\t\t--------------------------------------------------" << endl;
	cout << "\t\t\t\t\t\t\t";
	cin >> paswrd;
	cout << endl;
	if (ids == 52 & paswrd == 786) {
		do {
			system("pause");
			system("cls");
			//            choice for below message
			cout << "\t\t============================================" << endl;
			cout << "\t\t|          Administator Portal              |" << endl;
			cout << "\t\t============================================" << endl;
			cout << "\t\t     Enter 1 for ADD a new product    " << endl;
			cout << "\t\t     Enter 2 to display all products   " << endl;
			cout << "\t\t     Enter 3 for MODIFY Existing product" << endl;
			cout << "\t\t     Enter 4 for Delete a particular product item" << endl;
			cout << "\t\t     Enter 5 for Customers List " << endl;
			cout << "\t\t     Enter 6 for Dequeue customer" << endl;
			cout << "\t\t     Enter 0 for Main Menu" << endl;
			cout << "\nEnter Your choice >>>";
			cin >> ch;
			switch (ch) {
			case 1:
				insertp();
				break;
			case 2:
				system("cls");
				display();
				break;
			case 3:
				modify();
				system("cls");
				break;
			case 4:
				delPro();
				cout << "\n-------Product is Deleted-------\n";
				break;
			case 5:
				system("cls");
				cout << "|============CUSTOMERS NAMES LIST==============|" << endl;
				displayQueue();
				break;
			case 6:
				system("cls");
				cout << "|============CUSTOMERS NAMES LIST==============|" << endl;
				dequeue();
				displayQueue();
				break;
			default: system("cls");
			}
		} while (ch != 0);
	}
	else {
		cout << "\t\t\t\t--------------------------------------------------" << endl;
		cout << " \t\t\t\t||                    INVILAD........             ||" << endl;
		cout << "\t\t\t\t--------------------------------------------------" << endl;
		cout << "\t\t\t\t||                 RE-ENTER VALUEs                 ||" << endl;
		cout << "\t\t\t\t--------------------------------------------------" << endl;
		goto c;
	}
}
//        Main function
int main()
{
	system("color 0C");     //  for console color
	cout << "\t\t\t\t--------------------------------------------------" << endl;
	cout << "\t\t\t\t||            Shopping Club System                ||" << endl;
	cout << "\t\t\t\t--------------------------------------------------" << endl;
	cout << "\t\t\t\t|Subject Teacher ->> SIR FAWAD AND SIR RANA<<-- |\n" << endl;
	cout << "\t\t\t\t\t>>>----Project Implemented By-----<<<" << endl;
	cout << "\t\t\t\t\t\t URWAH KHALID (19225)" << endl;
	cout << "\t\t\t\t\t\t SUBJECT (DSA)" << endl;
	cout << "\t\t\t\t\t\t DEPT (BSCS)" << endl;
	cout << "\t\t\t\t--------------------------------------------------" << endl;
	cout << "\t\t\t\t||        WELCOME TO MUSER SHOPPING SYSTEM        ||" << endl;
	cout << "\t\t\t\t--------------------------------------------------" << endl;

	system("pause");
	system("cls");
	system("color Fc");
	int c; b:
	cout << "\t\t\t\t--------------------------------------------------" << endl;
	cout << "\t\t\t\t       <== PRESS 1 TO START THE PROJECT ==>          " << endl;
	cout << "\t\t\t\t--------------------------------------------------" << endl;
	cout << "\t\t\t\t\t\t\t\t";
	cin >> c;
	if (c == 1)
	{
		system("CLS");
		cout << "*******";
		Sleep(10000);
		cout << "*******";
		Sleep(1000);
		cout << "Loading System";
		Sleep(600);
		cout << ".";
		Sleep(600);
		cout << ".";
		Sleep(600);
		cout << ".";
		Sleep(600);
		cout << ".";
		Sleep(600);
		cout << ".";
		Sleep(600);
		cout << ".";
		Sleep(600);
		cout << ".";
		Sleep(600);
		cout << ".";
		cout << "." << endl;
		cout << endl;

	}
	else {
		cout << "\t\t\t\t--------------------------------------------------" << endl;
		cout << " \t\t\t\t||                    INVILAD........             ||" << endl;
		cout << "\t\t\t\t--------------------------------------------------" << endl;
		cout << "\t\t\t\t||        RE-ENTER VALUE TO START PROJECT          ||" << endl;
		cout << "\t\t\t\t--------------------------------------------------" << endl;
		goto b;
	}
	system("pause");
	system("cls");
	system("color Fc");
	int ch = 1;
	while (ch != 3) {
		//            choice for below message
		cout << "\t\t\t\t--------------------------------------------------" << endl;
		cout << "\t\t\t\t||        WELCOME TO MUSER SHOPPING SYSTEM        ||" << endl;
		cout << "\t\t\t\t--------------------------------------------------" << endl;;
		cout << "\n\t\t\t\t|-----------------<Main Menu>--------------------|";
		cout << "\n\n";
		cout << "\t\t\t\t\t\t1)Administator of Market\n";
		cout << "\t\t\t\t\t\t 2)Customer               \n";
		cout << "\t\t\t\t\t\t 3)Exit                    \n";
		cout << "\n\t\t\t\t\t\tEnter Your choice >>>";
		cin >> ch;
		switch (ch) {
		case 1:
			administator();
			break;
		case 2:
			cout << endl << endl;
			bpop();
			system("pause");
			buy();
			break;
		case 3:
			cout << "\n\n\t\t\t\t\tThank You\t\t\t\t";
			break;
		}
	}
	return 0;
}